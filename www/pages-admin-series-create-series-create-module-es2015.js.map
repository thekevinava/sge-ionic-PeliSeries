{"version":3,"sources":["./src/app/pages/admin/series-create/series-create.page.html","./src/app/pages/admin/series-create/series-create-routing.module.ts","./src/app/pages/admin/series-create/series-create.module.ts","./src/app/pages/admin/series-create/series-create.page.scss","./src/app/pages/admin/series-create/series-create.page.ts"],"names":[],"mappings":"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","file":"pages-admin-series-create-series-create-module-es2015.js","sourcesContent":["export default \"<app-header titulo=\\\"Create a Serie\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ng-container *ngIf=\\\"username\\\">\\n        <form #createForm=\\\"ngForm\\\">\\n            <!-- <ion-list> -->\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Titulo</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.title\\\" name=\\\"titulo\\\" type=\\\"text\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Slug (/series/serie)</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.slug\\\" name=\\\"slug\\\" type=\\\"text\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Año de emisión</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.year\\\" name=\\\"year\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Sinopsis</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"data.sinopsis\\\" name=\\\"sinopsis\\\" required></ion-textarea>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Temporadas</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.seasons\\\" name=\\\"seasons\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Capítulos</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.episodes\\\" name=\\\"episodes\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <!-- Select con los todas las categorías existentes -->\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Categorias</ion-label>\\n                <ion-select [(ngModel)]=\\\"data.categories\\\" name=\\\"categories\\\" multiple=\\\"true\\\" required>\\n                    <ng-container *ngFor=\\\"let c of categoriesData\\\">\\n                        <ion-select-option [value]=\\\"c.name\\\">{{ c.name }}</ion-select-option>\\n                    </ng-container>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Imagenes (rutas separadas por coma)</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"images\\\" name=\\\"images\\\" required></ion-textarea>\\n            </ion-item>\\n            <ion-button routerLink=\\\"/admin/home\\\" (click)=\\\"submitForm()\\\" expand=\\\"block\\\">Enviar</ion-button>\\n            <!-- </ion-list> -->\\n        </form>\\n    </ng-container>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeriesCreatePage } from './series-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeriesCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeriesCreatePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SeriesCreatePageRoutingModule } from './series-create-routing.module';\n\nimport { SeriesCreatePage } from './series-create.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SeriesCreatePageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [SeriesCreatePage]\n})\nexport class SeriesCreatePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluL3Nlcmllcy1jcmVhdGUvc2VyaWVzLWNyZWF0ZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { DataService } from 'src/app/services/data.service';\nimport { UserData } from 'src/app/services/userdata.service';\n\n@Component({\n  selector: 'app-series-create',\n  templateUrl: './series-create.page.html',\n  styleUrls: ['./series-create.page.scss'],\n})\nexport class SeriesCreatePage implements OnInit {\n  username: string;\n\n  categories: any;\n  images: any;\n\n  categoriesData: any;\n\n  data = {\n    title: null,\n    slug: null,\n    year: null,\n    sinopsis: null,\n    seasons: null,\n    episodes: null,\n    categories: null,\n    images: null\n  }\n\n  constructor(public dataService: DataService, public userData: UserData, public router: Router, private toastController: ToastController) { \n    this.categoriesData = [];\n  }\n  \n  ngOnInit() {\n    this.getUsername();\n\n    this.dataService.getCategorias().subscribe(res => {\n      this.categoriesData = res;\n    });\n  }\n\n  getUsername() {\n    this.userData.getUsername().then((username) => {\n      this.username = username;\n    });\n  }\n\n  submitForm() {\n    this.data.images = this.images.split(',');\n    this.dataService.createSerie(this.data).subscribe(res => {\n      this.data = {\n        title: null,\n        slug: null,\n        year: null,\n        sinopsis: null,\n        seasons: null,\n        episodes: null,\n        categories: null,\n        images: null\n      }\n      this.mostrarToast();\n    });\n  }\n\n  async mostrarToast() {\n    const toast = await this.toastController.create({\n      message: 'Has añadido la serie correctamente.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}