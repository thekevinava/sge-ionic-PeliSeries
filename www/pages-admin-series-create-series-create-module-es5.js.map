{"version":3,"sources":["webpack:///src/app/pages/admin/series-create/series-create.page.html","webpack:///src/app/pages/admin/series-create/series-create-routing.module.ts","webpack:///src/app/pages/admin/series-create/series-create.module.ts","webpack:///src/app/pages/admin/series-create/series-create.page.scss","webpack:///src/app/pages/admin/series-create/series-create.page.ts"],"names":["routes","path","component","SeriesCreatePageRoutingModule","imports","forChild","exports","SeriesCreatePageModule","declarations","SeriesCreatePage","dataService","userData","router","toastController","data","title","slug","year","sinopsis","seasons","episodes","categories","images","categoriesData","getUsername","getCategorias","subscribe","res","then","username","split","createSerie","mostrarToast","create","message","duration","toast","present","selector","template"],"mappings":"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","file":"pages-admin-series-create-series-create-module-es5.js","sourcesContent":["export default \"<app-header titulo=\\\"Create a Serie\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ng-container *ngIf=\\\"username\\\">\\n        <form #createForm=\\\"ngForm\\\">\\n            <!-- <ion-list> -->\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Titulo</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.title\\\" name=\\\"titulo\\\" type=\\\"text\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Slug (/series/serie)</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.slug\\\" name=\\\"slug\\\" type=\\\"text\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Año de emisión</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.year\\\" name=\\\"year\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Sinopsis</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"data.sinopsis\\\" name=\\\"sinopsis\\\" required></ion-textarea>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Temporadas</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.seasons\\\" name=\\\"seasons\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Capítulos</ion-label>\\n                <ion-input [(ngModel)]=\\\"data.episodes\\\" name=\\\"episodes\\\" type=\\\"number\\\" required></ion-input>\\n            </ion-item>\\n            <!-- Select con los todas las categorías existentes -->\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Categorias</ion-label>\\n                <ion-select [(ngModel)]=\\\"data.categories\\\" name=\\\"categories\\\" multiple=\\\"true\\\" required>\\n                    <ng-container *ngFor=\\\"let c of categoriesData\\\">\\n                        <ion-select-option [value]=\\\"c.name\\\">{{ c.name }}</ion-select-option>\\n                    </ng-container>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Imagenes (rutas separadas por coma)</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"images\\\" name=\\\"images\\\" required></ion-textarea>\\n            </ion-item>\\n            <ion-button routerLink=\\\"/admin/home\\\" (click)=\\\"submitForm()\\\" expand=\\\"block\\\">Enviar</ion-button>\\n            <!-- </ion-list> -->\\n        </form>\\n    </ng-container>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeriesCreatePage } from './series-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeriesCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeriesCreatePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SeriesCreatePageRoutingModule } from './series-create-routing.module';\n\nimport { SeriesCreatePage } from './series-create.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SeriesCreatePageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [SeriesCreatePage]\n})\nexport class SeriesCreatePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkbWluL3Nlcmllcy1jcmVhdGUvc2VyaWVzLWNyZWF0ZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { DataService } from 'src/app/services/data.service';\nimport { UserData } from 'src/app/services/userdata.service';\n\n@Component({\n  selector: 'app-series-create',\n  templateUrl: './series-create.page.html',\n  styleUrls: ['./series-create.page.scss'],\n})\nexport class SeriesCreatePage implements OnInit {\n  username: string;\n\n  categories: any;\n  images: any;\n\n  categoriesData: any;\n\n  data = {\n    title: null,\n    slug: null,\n    year: null,\n    sinopsis: null,\n    seasons: null,\n    episodes: null,\n    categories: null,\n    images: null\n  }\n\n  constructor(public dataService: DataService, public userData: UserData, public router: Router, private toastController: ToastController) { \n    this.categoriesData = [];\n  }\n  \n  ngOnInit() {\n    this.getUsername();\n\n    this.dataService.getCategorias().subscribe(res => {\n      this.categoriesData = res;\n    });\n  }\n\n  getUsername() {\n    this.userData.getUsername().then((username) => {\n      this.username = username;\n    });\n  }\n\n  submitForm() {\n    this.data.images = this.images.split(',');\n    this.dataService.createSerie(this.data).subscribe(res => {\n      this.data = {\n        title: null,\n        slug: null,\n        year: null,\n        sinopsis: null,\n        seasons: null,\n        episodes: null,\n        categories: null,\n        images: null\n      }\n      this.mostrarToast();\n    });\n  }\n\n  async mostrarToast() {\n    const toast = await this.toastController.create({\n      message: 'Has añadido la serie correctamente.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n}\n"]}